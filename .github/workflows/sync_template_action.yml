name: Sync Template Files to Derived Repos

on:
  push:
    branches:
      - main

jobs:
  sync-files:
    runs-on: windows-latest
    env:
      GITHUB_TOKEN: ${{ secrets.PERSONAL_TOKEN }}

    steps:
      - name: Checkout template repository
        uses: actions/checkout@v4

      - name: Install GitHub CLI
        run: |
          choco install gh -y
        shell: powershell

      - name: Set up Git
        run: |
          git config --global user.name "github-actions[bot]"
          git config --global user.email "github-actions[bot]@users.noreply.github.com"
        shell: powershell

      - name: Sync template files to derived repositories
        run: |
          # Read the list of derived repos from the file
          $DERIVED_REPOS = Get-Content derived_repos.txt

          # List all files and folders in the template repo (excluding .git and .github)
          $FILES_TO_SYNC = Get-ChildItem -Name | Where-Object { $_ -ne '.git' -and $_ -ne '.github' }

          foreach ($repo in $DERIVED_REPOS) {
            git clone "https://x-access-token:${env:GITHUB_TOKEN}@github.com/$repo.git"
            $repoName = $repo.Split('/')[-1]
            Set-Location $repoName

            # Ensure branch is up-to-date with remote
            $branchExists = git ls-remote --exit-code --heads origin update-from-template 2>$null
            if ($LASTEXITCODE -eq 0) {
              git fetch origin update-from-template:update-from-template
              git checkout update-from-template
              git reset --hard origin/update-from-template
            } else {
              git checkout -b update-from-template
            }

            foreach ($file in $FILES_TO_SYNC) {
              $src = "..\$file"
              $dst = ".\$file"
              if (Test-Path $src) {
                if (Test-Path $dst) {
                  Remove-Item $dst -Recurse -Force
                }
                Copy-Item $src $dst -Recurse
                git add $file
              }
            }

            git diff --cached --quiet; $hasChanges = $LASTEXITCODE
            if ($hasChanges -ne 0) {
              git commit -m "Sync template files from template repo"
              git push origin update-from-template
              gh pr create --title "Sync template files" `
                --body "Automated update from template repository." `
                --base main --head update-from-template
            }

            Set-Location ..
            Remove-Item $repoName -Recurse -Force
          }
        env:
          GITHUB_TOKEN: ${{ secrets.PERSONAL_TOKEN }}
        shell: powershell
